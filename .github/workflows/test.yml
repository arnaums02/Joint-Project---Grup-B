name: Django Tests

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y chromium-chromedriver
        sudo apt-get install -y libnss3
        sudo apt-get install -y libgconf-2-4
        sudo apt-get install -y libxss1
        sudo apt-get install -y libappindicator1
        sudo apt-get install -y fonts-liberation
        if [ ! -e /usr/bin/chromedriver ]; then sudo ln -s /usr/lib/chromium-browser/chromedriver /usr/bin/chromedriver; fi

    - name: Run tests
      env:
        DATABASE_URL: postgres://user:password@127.0.0.1:5432/test_db
      run: |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py test
        continue-on-error: true

    - name: Create issue on test failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const { github, context } = require("@actions/github");
          const issueTitle = `Test Failure in ${context.workflow}`;
          const issueBody = `
          There was a test failure in the workflow **${context.workflow}**.
          - **Job:** ${context.job}
          - **Commit:** ${context.sha}
          - **Run:** ${context.runNumber}
          - **URL:** ${context.runUrl}
          `;

          const issue = await github.rest.issues.create({
            ...context.repo,
            title: issueTitle,
            body: issueBody,
          });

          console.log(`Created issue ${issue.data.html_url}`);
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
